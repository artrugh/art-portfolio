{"ast":null,"code":"var _jsxFileName = \"/Users/arturorugh/Documents/code/art-portfolio/src/components/Image.js\";\nimport React, { useState, useEffect } from 'react'; // hooks\n\nimport { useMouseMove } from './../helpers/hooks';\nimport { projects } from './../data';\nexport default function Image({\n  setPortfolio,\n  img,\n  scrollPosition\n}) {\n  // store all the image string names in an array\n  const imagesList = () => {\n    let images = [];\n    projects.map(proj => proj[Object.keys(proj)].images && proj[Object.keys(proj)].images.map(img => images.push(img.img)));\n    return images;\n  }; // get the index from the imageList of the current image\n\n\n  const getIndex = imagesList().reduce((acc, image, ind) => {\n    if (image === img.img) {\n      return acc + ind;\n    }\n\n    return acc;\n  }, 0); // set the index hook and pass the intial value\n\n  const [index, setIndex] = useState(getIndex); // mousemove hook\n\n  const position = useMouseMove(); // each time the index changes, rerender\n\n  useEffect(() => {\n    console.log(\"slider\");\n  }, [index]);\n  return React.createElement(\"div\", {\n    id: \"bigimg_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      cursor: handleCursor().cursor\n    },\n    onClick: () => handleCursor().event(),\n    alt: img.alt,\n    className: \"main-image\",\n    src: require(`./../assets/photos/${imagesList()[index]}.png`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/arturorugh/Documents/code/art-portfolio/src/components/Image.js"],"names":["React","useState","useEffect","useMouseMove","projects","Image","setPortfolio","img","scrollPosition","imagesList","images","map","proj","Object","keys","push","getIndex","reduce","acc","image","ind","index","setIndex","position","console","log","cursor","handleCursor","event","alt","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,GAAhB;AAAqBC,EAAAA;AAArB,CAAf,EAAsD;AAEjE;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIC,MAAM,GAAG,EAAb;AACAN,IAAAA,QAAQ,CAACO,GAAT,CAAaC,IAAI,IACbA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAD,CAAJ,CAAwBF,MAAxB,IACAE,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAD,CAAJ,CAAwBF,MAAxB,CAA+BC,GAA/B,CAAmCJ,GAAG,IAAIG,MAAM,CAACK,IAAP,CAAYR,GAAG,CAACA,GAAhB,CAA1C,CAFJ;AAIA,WAAOG,MAAP;AACH,GAPD,CAHiE,CAWjE;;;AACA,QAAMM,QAAQ,GAAGP,UAAU,GAAGQ,MAAb,CAAoB,CAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,KAAqB;AACtD,QAAID,KAAK,KAAKZ,GAAG,CAACA,GAAlB,EAAuB;AAAE,aAAOW,GAAG,GAAGE,GAAb;AAAkB;;AAC3C,WAAOF,GAAP;AACH,GAHgB,EAGd,CAHc,CAAjB,CAZiE,CAiBjE;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACe,QAAD,CAAlC,CAlBiE,CAmBjE;;AACA,QAAMO,QAAQ,GAAGpB,YAAY,EAA7B,CApBiE,CAsBjE;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,GAHQ,EAGN,CAACJ,KAAD,CAHM,CAAT;AAQA,SACI;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,MAAM,EAAEC,YAAY,GAAGD;AADpB,KADX;AAII,IAAA,OAAO,EAAE,MAAMC,YAAY,GAAGC,KAAf,EAJnB;AAKI,IAAA,GAAG,EAAErB,GAAG,CAACsB,GALb;AAMI,IAAA,SAAS,EAAC,YANd;AAOI,IAAA,GAAG,EAAEC,OAAO,CAAE,sBAAqBrB,UAAU,GAAGY,KAAH,CAAU,MAA3C,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAcH","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// hooks\nimport { useMouseMove } from './../helpers/hooks';\n\nimport { projects } from './../data';\n\nexport default function Image({ setPortfolio, img, scrollPosition }) {\n\n    // store all the image string names in an array\n    const imagesList = () => {\n        let images = []\n        projects.map(proj =>\n            proj[Object.keys(proj)].images &&\n            proj[Object.keys(proj)].images.map(img => images.push(img.img))\n        )\n        return images\n    }\n    // get the index from the imageList of the current image\n    const getIndex = imagesList().reduce((acc, image, ind) => {\n        if (image === img.img) { return acc + ind }\n        return acc\n    }, 0);\n\n    // set the index hook and pass the intial value\n    const [index, setIndex] = useState(getIndex)\n    // mousemove hook\n    const position = useMouseMove();\n\n    // each time the index changes, rerender\n    useEffect(() => {\n        console.log(\"slider\");\n\n    }, [index])\n\n    \n\n\n    return (\n        <div id=\"bigimg_container\">\n            < img\n                style={{\n                    cursor: handleCursor().cursor\n                }}\n                onClick={() => handleCursor().event()}\n                alt={img.alt}\n                className=\"main-image\"\n                src={require(`./../assets/photos/${imagesList()[index]}.png`)}\n            />\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}