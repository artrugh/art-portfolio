{"ast":null,"code":"var _jsxFileName = \"/Users/arturorugh/Documents/code/art-portfolio/src/components/Nav.js\";\nimport React, { useState, useEffect } from 'react';\nimport MenuIcon from './MenuIcon';\nimport FunctionIcon from './FunctionIcon'; // hooks\n\nimport { useScrollPosition, useWindowDimensions, useNavBar } from './../helpers/hooks';\n\nconst Nav = ({\n  active,\n  setActive,\n  setDisplay,\n  leng,\n  setLeng\n}) => {\n  // set the style of the menu-icon -horizontals or diagonals\n  const [displayNav, setDisplayNav] = useState(true);\n  const [scrollPorcent, documentHeight, height] = useNavBar(\"#721e25\", \"#969696\");\n  console.log(documentHeight); // const { width, height } = useWindowDimensions();\n  // const [scrollPorcent, setScrollPorcent] = useState(``)\n  // useScrollPosition(({ prevPos, currPos }) => {\n  //     const grey = \"#969696\"\n  //     const red = \"#721e25\"\n  //     // get the scrollposition if < 50 windowlenght  ? position : bottom position\n  //     let scroll = Math.abs(currPos.y) < height ? Math.abs(currPos.y) : Math.abs(currPos.y) + height;\n  //     // get the total height of the document\n  //     let documentHeight = document.body.scrollHeight\n  //     // set porcentages\n  //     let left = Math.floor(scroll * 100 / documentHeight);\n  //     let right = 100 - left;\n  //     // set the border Image strings\n  //     let linearGradient = left > 50 ?\n  //         `linear-gradient(to right, ${red} ${left}%, ${grey} ${right}%)1` :\n  //         `linear-gradient(to left, ${grey} ${right}%, ${red} ${left}%)1`\n  //     // store on the hook\n  //     return setScrollPorcent(linearGradient)\n  // })\n  // display the nav when the web is scrolled and hide it after 5 second and \n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      // get the total of the window height\n      let windowHeight = document.body.getBoundingClientRect().height - window.innerHeight - 200;\n      let a = document.body.scrollHeight;\n      console.log(document);\n      console.log(a - height - 200);\n      console.log(windowHeight); // console.log(height);\n\n      setDisplayNav(true);\n      setTimeout(() => {\n        if (window.pageYOffset > 107 && !active && window.pageYOffset < windowHeight) setDisplayNav(false);\n      }, 10000);\n    });\n  }, [displayNav, active]);\n  return React.createElement(\"div\", {\n    className: \"nav-container\",\n    style: {\n      opacity: displayNav ? 1 : 0,\n      zIndex: displayNav ? 2 : 1,\n      borderImage: scrollPorcent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"logo\",\n    onClick: () => window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Arturo Rugh\"), React.createElement(\"div\", {\n    className: \"nav-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"leng\",\n    onClick: () => {\n      localStorage.setItem('art-web-leng', leng === 'espanol' ? 'english' : 'espanol');\n      setLeng(leng === 'espanol' ? 'english' : 'espanol');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, leng === \"espanol\" ? \"english\" : \"espaÃ±ol\"), React.createElement(\"div\", {\n    className: \"function-button\",\n    style: {\n      height: displayNav ? \"auto\" : 0\n    },\n    onClick: () => {\n      setDisplay(true);\n      setActive(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FunctionIcon, {\n    displayNav: displayNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(MenuIcon, {\n    displayNav: displayNav,\n    active: active,\n    setActive: setActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/arturorugh/Documents/code/art-portfolio/src/components/Nav.js"],"names":["React","useState","useEffect","MenuIcon","FunctionIcon","useScrollPosition","useWindowDimensions","useNavBar","Nav","active","setActive","setDisplay","leng","setLeng","displayNav","setDisplayNav","scrollPorcent","documentHeight","height","console","log","window","addEventListener","windowHeight","document","body","getBoundingClientRect","innerHeight","a","scrollHeight","setTimeout","pageYOffset","opacity","zIndex","borderImage","scrollTo","top","behavior","localStorage","setItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport MenuIcon from './MenuIcon';\nimport FunctionIcon from './FunctionIcon';\n\n// hooks\nimport { useScrollPosition, useWindowDimensions, useNavBar } from './../helpers/hooks'\n\nconst Nav = ({ active, setActive, setDisplay, leng, setLeng }) => {\n\n    // set the style of the menu-icon -horizontals or diagonals\n    const [displayNav, setDisplayNav] = useState(true);\n\n    const [scrollPorcent, documentHeight, height ] = useNavBar(\"#721e25\" ,\"#969696\");\n    console.log(documentHeight);\n    \n\n    // const { width, height } = useWindowDimensions();\n\n\n\n    // const [scrollPorcent, setScrollPorcent] = useState(``)\n\n    // useScrollPosition(({ prevPos, currPos }) => {\n\n    //     const grey = \"#969696\"\n    //     const red = \"#721e25\"\n\n    //     // get the scrollposition if < 50 windowlenght  ? position : bottom position\n    //     let scroll = Math.abs(currPos.y) < height ? Math.abs(currPos.y) : Math.abs(currPos.y) + height;\n    //     // get the total height of the document\n    //     let documentHeight = document.body.scrollHeight\n\n    //     // set porcentages\n    //     let left = Math.floor(scroll * 100 / documentHeight);\n    //     let right = 100 - left;\n    //     // set the border Image strings\n    //     let linearGradient = left > 50 ?\n    //         `linear-gradient(to right, ${red} ${left}%, ${grey} ${right}%)1` :\n    //         `linear-gradient(to left, ${grey} ${right}%, ${red} ${left}%)1`\n\n    //     // store on the hook\n    //     return setScrollPorcent(linearGradient)\n\n    // })\n\n    // display the nav when the web is scrolled and hide it after 5 second and \n    useEffect(() => {\n\n        window.addEventListener('scroll', () => {\n            // get the total of the window height\n            let windowHeight =  document.body.getBoundingClientRect().height - window.innerHeight - 200\n            let a = document.body.scrollHeight\nconsole.log(document);\n\n            console.log(a - height - 200);\n            console.log(windowHeight);\n            // console.log(height);\n\n\n            setDisplayNav(true);\n            setTimeout(() => {\n                if (window.pageYOffset > 107\n                    && !active\n                    && window.pageYOffset < windowHeight) setDisplayNav(false)\n            }, 10000)\n\n        });\n    }, [displayNav, active]);\n\n    return (\n        <div className=\"nav-container\"\n            style={{\n                opacity: displayNav ? 1 : 0,\n                zIndex: displayNav ? 2 : 1,\n                borderImage: scrollPorcent\n            }}>\n            <h1\n                id=\"logo\"\n                onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n            >Arturo Rugh</h1>\n            <div className=\"nav-buttons\">\n                <div\n                    className=\"leng\"\n                    onClick={() => {\n                        localStorage.setItem('art-web-leng', leng === 'espanol' ? 'english' : 'espanol');\n                        setLeng(leng === 'espanol' ? 'english' : 'espanol')\n                    }} >{leng === \"espanol\" ? \"english\" : \"espaÃ±ol\"}</div>\n\n                <div\n                    className=\"function-button\"\n                    style={{\n                        height: displayNav ? \"auto\" : 0\n                    }}\n                    onClick={() => {\n                        setDisplay(true)\n                        setActive(false)\n                    }}>\n                    <FunctionIcon\n                        displayNav={displayNav}\n                    />\n                </div>\n                <MenuIcon\n                    displayNav={displayNav}\n                    active={active}\n                    setActive={setActive}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}