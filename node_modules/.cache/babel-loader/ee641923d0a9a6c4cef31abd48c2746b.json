{"ast":null,"code":"var _jsxFileName = \"/Users/arturorugh/Documents/code/art-portfolio/src/components/Nav.js\";\nimport React, { useState, useEffect } from 'react';\nimport MenuIcon from './MenuIcon';\nimport FunctionIcon from './FunctionIcon'; // hooks\n\nimport { useNavBar, useMouseMove } from './../helpers/hooks';\n\nconst Nav = ({\n  active,\n  setActive,\n  setDisplay,\n  leng,\n  setLeng\n}) => {\n  // set the style of the menu-icon -horizontals or diagonals\n  const [displayNav, setDisplayNav] = useState(true);\n  const [scrollPorcent, documentHeight, height] = useNavBar(\"#721e25\", \"#969696\");\n  const position = useMouseMove(); // display the nav when the web is scrolled and hide it after 5 second and \n\n  useEffect(() => {\n    position.y > 100 && scrollPorcent[1] > 400 && !active ? setDisplayNav(false) : setDisplayNav(true); // window.addEventListener('scroll', () => {\n    //     setDisplayNav(true);\n    //     setTimeout(() => {\n    //         if (\n    //             // window.pageYOffset > 107\n    //             // && !active\n    //             // && window.pageYOffset < (documentHeight - height - 200)\n    //             ) setDisplayNav(false)\n    //     }, 10000)\n    // });\n  }, [displayNav, active, position, scrollPorcent[1]]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"nav-container\",\n    style: {\n      opacity: displayNav ? 1 : 0,\n      zIndex: displayNav ? 2 : 1,\n      borderImage: scrollPorcent[0]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"logo\",\n    onClick: () => window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Arturo Rugh\"), React.createElement(\"div\", {\n    className: \"nav-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"leng\",\n    onClick: () => {\n      localStorage.setItem('art-web-leng', leng === 'espanol' ? 'english' : 'espanol');\n      setLeng(leng === 'espanol' ? 'english' : 'espanol');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, leng === \"espanol\" ? \"english\" : \"español\"), React.createElement(\"div\", {\n    className: \"function-button\",\n    style: {\n      height: displayNav ? \"auto\" : 0\n    },\n    onClick: () => {\n      setDisplay(true);\n      setActive(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FunctionIcon, {\n    displayNav: displayNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(MenuIcon, {\n    displayNav: displayNav,\n    active: active,\n    setActive: setActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(\"svg\", {\n    // onClick={e => props.slider(e, props.project.img.length)}\n    // ref={arrowRight}\n    className: \"arrow-slider right\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    style: {\n      width: \"50px\" // maxWidth: props.index < props.project.img.length - 1 ? \"30px\" : \"0px\",\n      // paddingLeft: props.index < props.project.img.length - 1 ? \"15px\" : \"0px\"\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"polyline\", {\n    className: \"arrow-\",\n    points: \"50.5,6.3 7,49.5 50.5,93 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/arturorugh/Documents/code/art-portfolio/src/components/Nav.js"],"names":["React","useState","useEffect","MenuIcon","FunctionIcon","useNavBar","useMouseMove","Nav","active","setActive","setDisplay","leng","setLeng","displayNav","setDisplayNav","scrollPorcent","documentHeight","height","position","y","opacity","zIndex","borderImage","window","scrollTo","top","behavior","localStorage","setItem","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport MenuIcon from './MenuIcon';\nimport FunctionIcon from './FunctionIcon';\n\n// hooks\nimport { useNavBar, useMouseMove } from './../helpers/hooks'\n\nconst Nav = ({ active, setActive, setDisplay, leng, setLeng }) => {\n\n    // set the style of the menu-icon -horizontals or diagonals\n    const [displayNav, setDisplayNav] = useState(true);\n\n    const [scrollPorcent, documentHeight, height] = useNavBar(\"#721e25\", \"#969696\");\n\n    const position = useMouseMove()\n\n    // display the nav when the web is scrolled and hide it after 5 second and \n    useEffect(() => {\n\n        (position.y > 100\n            && scrollPorcent[1] > 400\n            && !active) ? setDisplayNav(false)\n            : setDisplayNav(true);\n\n        // window.addEventListener('scroll', () => {\n\n        //     setDisplayNav(true);\n        //     setTimeout(() => {\n        //         if (\n        //             // window.pageYOffset > 107\n        //             // && !active\n        //             // && window.pageYOffset < (documentHeight - height - 200)\n        //             ) setDisplayNav(false)\n        //     }, 10000)\n        // });\n\n    }, [displayNav, active, position, scrollPorcent[1]]);\n\n    return (\n        <>\n            <div className=\"nav-container\"\n                style={{\n                    opacity: displayNav ? 1 : 0,\n                    zIndex: displayNav ? 2 : 1,\n                    borderImage: scrollPorcent[0]\n                }}>\n                <h1\n                    id=\"logo\"\n                    onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n                >Arturo Rugh</h1>\n                <div className=\"nav-buttons\">\n                    <div\n                        className=\"leng\"\n                        onClick={() => {\n                            localStorage.setItem('art-web-leng', leng === 'espanol' ? 'english' : 'espanol');\n                            setLeng(leng === 'espanol' ? 'english' : 'espanol')\n                        }} >{leng === \"espanol\" ? \"english\" : \"español\"}</div>\n\n                    <div\n                        className=\"function-button\"\n                        style={{\n                            height: displayNav ? \"auto\" : 0\n                        }}\n                        onClick={() => {\n                            setDisplay(true)\n                            setActive(false)\n                        }}>\n                        <FunctionIcon\n                            displayNav={displayNav}\n                        />\n                    </div>\n                    <MenuIcon\n                        displayNav={displayNav}\n                        active={active}\n                        setActive={setActive}\n                    />\n                </div>\n            </div>\n            <svg\n                // onClick={e => props.slider(e, props.project.img.length)}\n                // ref={arrowRight}\n                className=\"arrow-slider right\"\n                x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\"\n                style={{\n                    width:\"50px\" \n                    // maxWidth: props.index < props.project.img.length - 1 ? \"30px\" : \"0px\",\n                    // paddingLeft: props.index < props.project.img.length - 1 ? \"15px\" : \"0px\"\n                }}>\n                <polyline className=\"arrow-\" points=\"50.5,6.3 7,49.5 50.5,93 \" />\n            </svg>\n\n        </>\n    )\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}